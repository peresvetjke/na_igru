<%= content_for :head do %>
  <link href="https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.css" rel="stylesheet">
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.5.1/mapbox-gl.js"></script>
  <style>
  body { margin: 0; padding: 0; }
  #map { position: relative; width: 966px; height: 400px }
  </style>
<% end %>

<h2>Locations list</h2>
<%= link_to 'New location', new_location_path, data: {turbolinks: "false"} %> <br>
<%= render partial: 'shared/errors', locals: {resource: @location} %>
<table class="table">
  <th></th>
  <th>Title</th>
  <th>Address</th>
  <th colspan="2">Players amount default (max / min)</th>
  <th colspan="3">Actions</th>
  <%= render @locations %>
</table>

<div id="map"></div>
<script>

  // https://docs.mapbox.com/mapbox-gl-js/example/popup-on-hover/
  mapboxgl.accessToken = 'pk.eyJ1IjoicGVyZXN2ZXRqa2UiLCJhIjoiY2t2OWtwbnV5MDdwMzJ4bWdyeWNsMHdkaCJ9.SrRRsNDbB_0klBwaQSSdYQ';
const map = new mapboxgl.Map({
  container: 'map',
  style: 'mapbox://styles/mapbox/streets-v11',
  center: [-77.04, 38.907],
  zoom: 11.15
});
 
map.on('load', () => {
  map.addSource('places', {
    'type': 'geojson',
    'data': {
    'type': 'FeatureCollection',
    'features': [
    {
    'type': 'Feature',
    'properties': {
    'description':
    '<strong>Make it Mount Pleasant</strong><p>Make it Mount Pleasant is a handmade and vintage market and afternoon of live entertainment and kids activities. 12:00-6:00 p.m.</p>'
    },
    'geometry': {
    'type': 'Point',
    'coordinates': [-77.038659, 38.931567]
    }
    },
    {
    'type': 'Feature',
    'properties': {
    'description':
    '<strong>Mad Men Season Five Finale Watch Party</strong><p>Head to Lounge 201 (201 Massachusetts Avenue NE) Sunday for a Mad Men Season Five Finale Watch Party, complete with 60s costume contest, Mad Men trivia, and retro food and drink. 8:00-11:00 p.m. $10 general admission, $20 admission and two hour open bar.</p>'
    },
    'geometry': {
    'type': 'Point',
    'coordinates': [-77.003168, 38.894651]
    }
    }
    ]
    }
  });
  // Add a layer showing the places.
  map.addLayer({
    'id': 'places',
    'type': 'circle',
    'source': 'places',
    'paint': {
    'circle-color': '#4264fb',
    'circle-radius': 6,
    'circle-stroke-width': 2,
    'circle-stroke-color': '#ffffff'
    }
  });
   
  // Create a popup, but don't add it to the map yet.
  const popup = new mapboxgl.Popup({
    closeButton: false,
    closeOnClick: false
  });
   
  map.on('mouseenter', 'places', (e) => {
    // Change the cursor style as a UI indicator.
    map.getCanvas().style.cursor = 'pointer';
     
    // Copy coordinates array.
    const coordinates = e.features[0].geometry.coordinates.slice();
    const description = e.features[0].properties.description;
     
    // Ensure that if the map is zoomed out such that multiple
    // copies of the feature are visible, the popup appears
    // over the copy being pointed to.
    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
    }
     
    // Populate the popup and set its coordinates
    // based on the feature found.
    popup.setLngLat(coordinates).setHTML(description).addTo(map);
  });
   
  map.on('mouseleave', 'places', () => {
    map.getCanvas().style.cursor = '';
    popup.remove();
  });
});


</script>